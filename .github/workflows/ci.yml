name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "master", "develop", "feature/*" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  # 第一阶段：构建
  build:
    name: Build Application
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
        cache: maven
    
    - name: Build with Maven
      run: |
        echo "Current directory: $(pwd)"
        echo "List directory contents:"
        ls -la
        echo "Building with Maven..."
        mvn clean package -DskipTests
        echo "Build completed, checking target directories:"
        ls -la */target/

  # 第二阶段：构建和推送Docker镜像
  docker:
    name: Build and Push Docker Images
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
        cache: maven
    
    - name: Build with Maven
      run: mvn clean package -DskipTests
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Eureka Server
      uses: docker/build-push-action@v4
      with:
        context: ./medical-eureka-server
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/medical-eureka-server:latest
    
    - name: Build and push Gateway
      uses: docker/build-push-action@v4
      with:
        context: ./medical-gateway
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/medical-gateway:latest
    
    - name: Build and push User Service
      uses: docker/build-push-action@v4
      with:
        context: ./medical-user
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/medical-user:latest

  # 第三阶段：部署
  deploy:
    name: Deploy to Server
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Create .env file
      run: |
        echo "Creating .env file..."
        echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" > .env
        cat .env
    
    - name: Copy deployment files
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        source: "docker-compose.yml,.env"
        target: "/app/medical-platform"
    
    - name: Deploy to Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          cd /app/medical-platform
          echo "Pulling new images..."
          docker-compose pull
          echo "Stopping old containers..."
          docker-compose down
          echo "Starting new containers..."
          docker-compose up -d
          echo "Cleaning up old images..."
          docker image prune -f
