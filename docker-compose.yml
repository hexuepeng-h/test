version: '3.8'

services:
  # MySQL服务
  mysql:
    image: mysql:8.0
    container_name: medical-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: user_db
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command:
      --character-set-server=utf8mb4 
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
    networks:
      - medical_net

  # Redis服务
  redis:
    image: redis:6.2
    container_name: medical-redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --requirepass 123456
    volumes:
      - redis_data:/data
    networks:
      - medical_net

  # Zookeeper服务（Kafka依赖）
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: medical-zookeeper
    ports:
      - "2181:2181"
    networks:
      - medical_net

  # Kafka服务
  kafka:
    image: wurstmeister/kafka:latest
    container_name: medical-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "appointment_created:1:1,appointment_rescheduled:1:1,appointment_cancelled:1:1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - medical_net

  # Kafka管理界面
  kafka-manager:
    image: sheepkiller/kafka-manager:latest
    container_name: medical-kafka-manager
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: medical-secret
    depends_on:
      - kafka
      - zookeeper
    networks:
      - medical_net

# 持久化存储
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

# 网络配置
networks:
  medical_net:
    driver: bridge
